<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.user.mapper.AdminMapper">





	<!-- 회원 관리 관련======================================== -->

	<!-- 회원 리스트 가져오기 -->
	<select id="selectAllUserAdmin" resultType="User">
		select * from member order by indate desc
	</select>
	
	<!-- 페이징 처리된 약속 예약 정보 리스트 부르기 -->
	<select id="selectAllUserAdmin_paging" resultType="User"
	parameterType="hashmap">
		select * 
		from(
		select member.*, row_number() over(order by indate desc) mn
		from member
		) where
		mn between #{start} and #{end}
		order by indate desc
	</select>
	
	<!-- idx로 회원정보 가져오기 -->
	<select id="selectUserByIdx" parameterType="string" resultType="User">
		select * from member where idx=#{idx}
	</select>
	
	<!-- idx로 해당 회원이 등록한 약속수 가져오기 -->
	<select id="selectYaksokCountOfUser" parameterType="string" resultType="int">
		select count(*) from yaksok where idx=#{idx}
	</select>
	
	<!-- idx와 mstate로 해당 회원의 회원상태 변경하기 -->
	<select id="editUserMstateAdmin" parameterType="hashmap">
		update member set mstate=#{mstate} where idx=#{idx}
	</select>
	
	
	
	
	
	<!-- 약속 통계 관련======================================== -->
	
	<!-- yidx로 약속 예약 정보의 예약된 year리스트 모두 가져오기 -->
	<select id="getAllYaksokReserveYearList" resultType="string">
		select distinct (to_char(indate,'YY')) yearList
		from yaksok order by yearList desc
	</select>

	<!-- yidx와 year갚으로 약속 예약 정보의 해당 year에 예약된 month리스트 모두 가져오기 -->
	<select id="getAllYaksokReserveMonthList" resultType="string"
	parameterType="string">
		select distinct (to_char(indate,'MM')) monthDate
		from yaksok 
		where to_char(indate,'YY') = #{year}
		order by monthDate desc
	</select>
	
	<!-- 연도와 월의 데이터를 활용하여 해달 월의 예약 데이터 가져오기 -->
	<resultMap id="monthData" type="hashmap"></resultMap>
	
	<select id="selectYaksokReserveMonthData" statementType="CALLABLE" 
	parameterType="hashmap">
	{ CALL month_data_proc_admin(
	#{monthData, mode=OUT, jdbcType=VARCHAR, javaType=String}, 
	#{year_month_data, mode=IN, jdbcType=VARCHAR}, 
	#{month_last_day, mode=IN, jdbcType=VARCHAR})
	}
	</select>
	
	<!-- 연도의 데이터를 활용하여 해당 연도의 예약 데이터 가져오기 -->
	<resultMap id="yearData" type="hashmap"></resultMap>
	
	<select id="selectYaksokReserveYearData" statementType="CALLABLE"
	parameterType="hashmap">
	{ CALL year_data_proc_admin(
	#{yearData, mode=OUT,jdbcType=VARCHAR, javaType=String},
	#{year_selectYear, mode=IN, jdbcType=VARCHAR})
	}
	</select>
	
	<!-- 총 약속 등록 수 가져오기 -->
	<select id="selectTotalYaksokCount" resultType="int">
		select count(*) from yaksok
	</select>
	
	<!-- 최근 7일 약속 등록 수 가져오기 -->
	<select id="selectWeekYaksokCount" resultType="int">
		select count(*) 
		from yaksok 
		where to_char(indate,'YYYYMMDD')>=to_char(sysdate-7, 'YYYYMMDD')
	</select>
	
	<!-- 최근 30일 약속 등록 수 가져오기 -->
	<select id="selectMonthYaksokCount" resultType="int">
		select count(*) 
		from yaksok 
		where to_char(indate,'YYYYMMDD')>=to_char(sysdate-30, 'YYYYMMDD')
	</select>
	
	<!-- 최근 1년 약속 등록 수 가져오기 -->
	<select id="selectYearYaksokCount" resultType="int">
		select count(*) 
		from yaksok 
		where to_char(indate,'YYYYMMDD')>=to_char(sysdate-365, 'YYYYMMDD')
	</select>
	
</mapper>


